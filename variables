// Variables allow computers to store and manipulate data in a dynamic fashion. 
// They do this by using a "label" to point to the data rather than using the data itself. 
// Any of the eight data types may be stored in a variable.


//It is common to initialize a variable to an initial value in the same line as it is declared.
var a = 7;
var myVar = 0;

//When JavaScript variables are declared, they have an initial value of undefined. 
//If you do a mathematical operation on an undefined variable your result will be NaN which means "Not a Number". 
//If you concatenate a string with an undefined variable, you will get a literal string of undefined.

//Write variable names in JavaScript in camelCase.
//In camelCase, multi-word variable names have the first word in lowercase and the first letter of each subsequent word is capitalized.

//Quotes are not the only characters that can be escaped inside a string. 
//There are two reasons to use escaping characters:
//To allow you to use characters you may not otherwise be able to type out, such as a carriage return.
//To allow you to represent multiple quotes in a string without JavaScript misinterpreting what you mean.

Code	Output
\'	single quote
\"	double quote
\\	backslash
\n	newline
\r	carriage return
\t	tab
\b	word boundary
\f	form feed
Note that the backslash itself must be escaped in order to display as a backslash


// You can find the length of a String value by writing .length after the string variable or string literal.
console.log("Alan Peter".length);

lastNameLength = lastName;
console.log(lastNameLength.length)


//Bracket notation is a way to get a character at a specific index within a string.
//Most modern programming languages, like JavaScript, don't start counting at 1 like humans do. 
//They start at 0. This is referred to as Zero-based indexing.
//For example, the character at index 0 in the word Charles is C. 
//So if var firstName = "Charles", you can get the value of the first letter of the string by using firstName[0].

//Example:
var firstName = "Charles";
var firstLetter = firstName[0];
//firstLetter would have a value of the string C.
//You can also use bracket notation to get the character at other positions within a string.
//Remember that computers start counting at 0, so the first character is actually the zeroth character.

//Example:
var firstName = "Ada";
var secondLetterOfFirstName = firstName[1];
//secondLetterOfFirstName would have a value of the string d.

//In order to get the last letter of a string, you can subtract one from the string's length.
//For example, if var firstName = "Ada", you can get the value of the last letter of the string by using firstName[firstName.length - 1].
//Example:

var firstName = "Ada";
var lastLetter = firstName[firstName.length - 1];
//lastLetter would have a value of the string a.
